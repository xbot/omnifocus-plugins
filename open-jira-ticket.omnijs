/*{
    "type": "action",
    "targets": ["omnifocus"],
    "author": "Donie",
    "identifier": "org.0x3f.open_jira_ticket",
    "version": "1.1",
    "description": "Open jira ticket of the focused project.",
    "label": "Open Jira Ticket",
    "shortLabel": "Open Jira Ticket",
    "paletteLabel": "Open Jira Ticket",
    "image": "j.square.on.square"
}*/
(() => {
    let preferences = new Preferences();

    const PREF_JIRA_URL = "jira_url";

    function get_current_jira_ticket_number(selection) {
        if (selection.databaseObjects.length <= 0) {
            return null;
        }

        const firstSelectedObj = selection.databaseObjects[0];

        let projectName = null;

        if (typeof firstSelectedObj.containingProject === "undefined") {
            projectName = firstSelectedObj.name;
        } else {
            projectName = firstSelectedObj.containingProject.name;
        }

        const regex = /^DEV-(\d+)\s/;
        const matches = projectName.match(regex);

        if (matches.length < 2) {
            new Alert(
                "Emmm...",
                "The focused project is not a jira ticket."
            ).show();
            return null;
        }

        return matches[1];
    }

    function prompt_preferences_dialog() {
        let defaultJiraURL = "";

        let jiraURL = preferences.readString(PREF_JIRA_URL);
        if (!jiraURL) {
            jiraURL = defaultJiraURL;
        }

        let jiraURLInput = new Form.Field.String(
            PREF_JIRA_URL,
            "Jira URL",
            jiraURL
        );

        let preferenceForm = new Form();

        preferenceForm.addField(jiraURLInput);

        let formPrompt = "Open Jira Ticket";
        let buttonTitle = "Save";

        let formPromise = preferenceForm.show(formPrompt, buttonTitle);

        preferenceForm.validate = function (formObject) {
            return true;
        };

        formPromise.then(function (formObject) {
            jiraURL = formObject.values[PREF_JIRA_URL];
            if (!jiraURL) {
                jiraURL = "";
            }

            preferences.write(PREF_JIRA_URL, jiraURL.trim());
        });
    }

    function is_preference_action(sender) {
        return (app.platformName === "macOS" && app.controlKeyDown) || (app.platformName === 'iOS' && sender instanceof MenuItem);
    }

    var action = new PlugIn.Action(function (selection, sender) {
        try {
            if (is_preference_action(sender)) {
                prompt_preferences_dialog();
            } else {
                const ticketNumber = get_current_jira_ticket_number(selection);
                const jiraURL = preferences.readString(PREF_JIRA_URL);

                if (jiraURL === null) {
                    throw { name: "Emmm...", message: "Jira URL must be set in preferences. (Click the action with CTRL key)" };
                }

                URL.fromString(jiraURL + "/browse/DEV-" + ticketNumber).open();
            }
        } catch (err) {
            new Alert(err.name, err.message).show();
        }
    });

    action.validate = function (selection, sender) {
        return is_preference_action(sender) || get_current_jira_ticket_number(selection) !== null;
    };

    return action;
})();
